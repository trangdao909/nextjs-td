{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\CS\\\\React_JS\\\\projects\\\\23.next-js-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["E:/CS/React_JS/projects/23.next-js-bigger-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAII,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC9B,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAIA,KAAK,CAACC,UAAN,CAAiBC,KAD9B;AAEI,IAAA,KAAK,EAAIF,KAAK,CAACC,UAAN,CAAiBE,KAF9B;AAGI,IAAA,OAAO,EAAIH,KAAK,CAACC,UAAN,CAAiBG,OAHhC;AAII,IAAA,WAAW,EAAIJ,KAAK,CAACC,UAAN,CAAiBI;AAJpC;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KARYN,a;;AAsCb,eAAeA,aAAf","sourcesContent":["import {MongoClient, ObjectId} from 'mongodb';\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\n\r\n\r\n    function MeetupDetails(props) {\r\n    return (\r\n        <MeetupDetail \r\n            image = {props.meetupData.image}\r\n            title = {props.meetupData.title}\r\n            address = {props.meetupData.address}\r\n            description = {props.meetupData.description} />        \r\n    )      \r\n}\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://trangdao909:Bluebaby123!@cluster0.zv8xl.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollections = db.collection('meetups'); // create a collection if not exist.\r\n    const meetups = await meetupsCollections.find({}, {_id: 1}).toArray(); // get all data from the database\r\n    client.close()\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params : { meetupId: meetup._id.toString() }}))       \r\n    } \r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    const client = await MongoClient.connect('mongodb+srv://trangdao909:Bluebaby123!@cluster0.zv8xl.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollections = db.collection('meetups'); // create a collection if not exist.\r\n    const selectedMeetup = await meetupsCollections.findOne({_id: ObjectId(meetupId)}); // get 1 document from the database\r\n    client.close()\r\n\r\n    // fetch data from API\r\n    return {\r\n        props: {\r\n            meetupData: selectedMeetup\r\n        },\r\n        revalidate: 10\r\n    };\r\n}\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}