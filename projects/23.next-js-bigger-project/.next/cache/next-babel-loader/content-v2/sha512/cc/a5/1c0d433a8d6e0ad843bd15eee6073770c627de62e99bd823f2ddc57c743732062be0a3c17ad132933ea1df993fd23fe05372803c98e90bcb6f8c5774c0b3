{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\CS\\\\React_JS\\\\projects\\\\23.next-js-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/a/a6/Cirsium_eriophorum_%28Kozara_National_Park%2C_Republika_Srpska%29.jpg\",\n    title: \"First Meetup\",\n    address: \"Some address\",\n    description: \"This is first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://trangdao909:Bluebaby123!@cluster0.zv8xl.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups'); // create a collection if not exist.\n\n  const meetups = await meetupsCollections.find({}, {\n    _id: 1\n  }).toArray(); // get all data from the database\n\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://trangdao909:Bluebaby123!@cluster0.zv8xl.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups'); // create a collection if not exist.\n\n  const selectedMeetup = await meetupsCollections.findOne({\n    _id: meetupId\n  }); // get all data from the database\n\n  client.close(); // fetch data from API\n\n  return {\n    props: {\n      meetupData: {\n        image: selectedMeetup.image,\n        id: meetupId,\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    },\n    revalidate: 10\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/CS/React_JS/projects/23.next-js-bigger-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","getStaticPaths","client","connect","db","meetupsCollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetupData","image","id","title","address","description","revalidate"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,SAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAII,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC9B,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAG,2HADZ;AAEI,IAAA,KAAK,EAAG,cAFZ;AAGI,IAAA,OAAO,EAAG,cAHd;AAII,IAAA,WAAW,EAAG;AAJlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;AACD,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B,CAHkC,CAGmB;;AACrD,QAAMC,OAAO,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,CAAwB,EAAxB,EAA4B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA5B,EAAsCC,OAAtC,EAAtB,CAJkC,CAIqC;;AACvER,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAG;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AAAX,KAAL,CAAlB;AAFJ,GAAP;AAIH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B,CAJ0C,CAIW;;AACrD,QAAMe,cAAc,GAAG,MAAMhB,kBAAkB,CAACiB,OAAnB,CAA2B;AAACb,IAAAA,GAAG,EAAEQ;AAAN,GAA3B,CAA7B,CAL0C,CAKgC;;AAC1Ef,EAAAA,MAAM,CAACS,KAAP,GAN0C,CAQ1C;;AACA,SAAO;AACHX,IAAAA,KAAK,EAAE;AACHuB,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAEH,cAAc,CAACG,KADd;AAERC,QAAAA,EAAE,EAAER,QAFI;AAGRS,QAAAA,KAAK,EAAEL,cAAc,CAACK,KAHd;AAIRC,QAAAA,OAAO,EAAEN,cAAc,CAACM,OAJhB;AAKRC,QAAAA,WAAW,EAAEP,cAAc,CAACO;AALpB;AADT,KADJ;AAUHC,IAAAA,UAAU,EAAE;AAVT,GAAP;AAYH;AACD,eAAe9B,aAAf","sourcesContent":["import {MongoClient} from 'mongodb';\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\n\r\n\r\n    function MeetupDetails(props) {\r\n    return (\r\n        <MeetupDetail \r\n            image = 'https://upload.wikimedia.org/wikipedia/commons/a/a6/Cirsium_eriophorum_%28Kozara_National_Park%2C_Republika_Srpska%29.jpg' \r\n            title = 'First Meetup' \r\n            address = 'Some address'\r\n            description = 'This is first meetup' />        \r\n    )      \r\n}\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://trangdao909:Bluebaby123!@cluster0.zv8xl.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollections = db.collection('meetups'); // create a collection if not exist.\r\n    const meetups = await meetupsCollections.find({}, {_id: 1}).toArray(); // get all data from the database\r\n    client.close()\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params : { meetupId: meetup._id.toString() }}))       \r\n    } \r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    const client = await MongoClient.connect('mongodb+srv://trangdao909:Bluebaby123!@cluster0.zv8xl.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollections = db.collection('meetups'); // create a collection if not exist.\r\n    const selectedMeetup = await meetupsCollections.findOne({_id: meetupId}); // get all data from the database\r\n    client.close()\r\n\r\n    // fetch data from API\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: selectedMeetup.image ,\r\n                id: meetupId,\r\n                title: selectedMeetup.title ,\r\n                address: selectedMeetup.address,\r\n                description: selectedMeetup.description\r\n            }\r\n        },\r\n        revalidate: 10\r\n    };\r\n}\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}