{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\CS\\\\React_JS\\\\projects\\\\23.next-js-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from 'next/head';\nimport { Fragment } from 'react';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Add a new Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add your own meetups and create amazing networking opportunities.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["E:/CS/React_JS/projects/23.next-js-bigger-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","Head","Fragment","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGI,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC9B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,OAAO,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,YAAD;AACI,MAAA,KAAK,EAAIA,KAAK,CAACC,UAAN,CAAiBC,KAD9B;AAEI,MAAA,KAAK,EAAIF,KAAK,CAACC,UAAN,CAAiBE,KAF9B;AAGI,MAAA,OAAO,EAAIH,KAAK,CAACC,UAAN,CAAiBG,OAHhC;AAII,MAAA,WAAW,EAAIJ,KAAK,CAACC,UAAN,CAAiBI;AAJpC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBC;;KAlBQN,a;;AAsDb,eAAeA,aAAf","sourcesContent":["import {MongoClient, ObjectId} from 'mongodb';\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport Head from 'next/head';\r\nimport { Fragment } from 'react';\r\n\r\n\r\n    function MeetupDetails(props) {\r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n                <title>Add a new Meetups</title>\r\n                <meta \r\n                    name='description'\r\n                    content='Add your own meetups and create amazing networking opportunities.'\r\n                />\r\n            </Head>\r\n            <MeetupDetail \r\n                image = {props.meetupData.image}\r\n                title = {props.meetupData.title}\r\n                address = {props.meetupData.address}\r\n                description = {props.meetupData.description} />   \r\n\r\n        </Fragment>\r\n       )   \r\n    }\r\n\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://trangdao909:Bluebaby123!@cluster0.zv8xl.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollections = db.collection('meetups'); // create a collection if not exist.\r\n    const meetups = await meetupsCollections.find({}, {_id: 1}).toArray(); // get all data from the database\r\n    client.close()\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params : { meetupId: meetup._id.toString() }}))       \r\n    } \r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;   \r\n    const client = await MongoClient.connect('mongodb+srv://trangdao909:Bluebaby123!@cluster0.zv8xl.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollections = db.collection('meetups'); // create a collection if not exist.\r\n    const selectedMeetup = await meetupsCollections.findOne({_id: ObjectId(meetupId)}); // get 1 document from the database\r\n    client.close()\r\n\r\n    // fetch data from API\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                description: selectedMeetup.description,\r\n                image: selectedMeetup.image\r\n        },\r\n        revalidate: 10\r\n    }\r\n}}\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}